// Mocks generated by Mockito 5.4.3 from annotations
// in lista_tarefas/test/widget_mockito_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:ui' as _i4;

import 'package:lista_tarefas/model/tarefa.dart' as _i3;
import 'package:lista_tarefas/provider/tarefa_provider.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TarefaProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockTarefaProvider extends _i1.Mock implements _i2.TarefaProvider {
  MockTarefaProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.Tarefa> get tarefas => (super.noSuchMethod(
        Invocation.getter(#tarefas),
        returnValue: <_i3.Tarefa>[],
      ) as List<_i3.Tarefa>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void adicionarTarefa(String? titulo) => super.noSuchMethod(
        Invocation.method(
          #adicionarTarefa,
          [titulo],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removerTarefa(int? id) => super.noSuchMethod(
        Invocation.method(
          #removerTarefa,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void marcarComoConcluida(int? id) => super.noSuchMethod(
        Invocation.method(
          #marcarComoConcluida,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void desmarcarComoConcluida(int? id) => super.noSuchMethod(
        Invocation.method(
          #desmarcarComoConcluida,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
